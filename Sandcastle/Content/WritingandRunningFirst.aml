<?xml version="1.0" encoding="utf-8"?>
<topic id="a06b3cf0-236f-4c9c-981a-7fc577a996dc" revisionNumber="1">
  <developerWalkthroughDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->

    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->

      <para>
        Once you have your robot project created, you are ready to start programming. We are still working on our own documentation
        for this, but for now you can look at FIRST's Java and C++ documentation to get the basics. You can also find our
        <codeEntityReference linkText="API documentation here">
          G:WPILib
        </codeEntityReference>.
        Once you have that, the steps below will walk you through the process of deploying the code to the robot.
      </para>
    </introduction>

    <!-- <prerequisites><content>Optional prerequisites info</content></prerequisites> -->

    <!-- One or more procedure or section with procedure -->
    <procedure>
      <title>Procedure title</title>
      <steps class="ordered">
        <step>
          <content>
            <para>
              Make sure you have installed the Runtime and set your team number in Visual Studio. The deploy process will check
              for these, and any errors will be displayed in the console window at the bottom of Visual Studio.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>Click on the <legacyBold>FRC</legacyBold> menu, and then click <legacyBold>Deploy Code</legacyBold>. This will deploy your code
            to the robot. 
          </para>
          </content>
        </step>
      </steps>
      <!-- <conclusion>Optional conclusion</conclusion> -->
    </procedure>

    <section>
      <title>Extra Deploy Features</title>
      <content>
        <para>
          RobotDotNet has support for some extra deploy features as well. These can be found in the settings menu, which can be accessed by clicking on FRC, then clicking
          Settings.
        </para>
        <para>
          The first setting is <legacyBold>Enable Netconsole.</legacyBold> This will enable the netconsole window on every deploy.
        </para>
        <para>
          The second setting is <legacyBold>Send command line arguments.</legacyBold> This will enable the command line arguements
          found in the visual studio project file to be deployed to the RoboRIO.
        </para>
        <para>
          There are also Verbose and Debug options. Verbose mode will output to the console all files and commands being sent to the RoboRIO
          in order to facilitate debugging. Debug mode will force the startup project to be the deployed project, rather then the project set
          using the Set Main Robot Project button. We recommend you leave debug mode off unless you have an issue, as it will break
          easy simulator support.
        </para>
      </content>

    </section>

    <section>
      <title>Troubleshooting</title>
      <content>
        <para>
          If the wrong robot project is being deployed, it is possible your project is an old version, or the robot setting has been lost.
          To solve this, right click on the project you want to be the main robot project, and click <legacyBold>Set Main Robot Project</legacyBold>.
          The proper project should now deploy.
        </para>
        <para>
          If you receive a message saying the runtime is not installed, make sure the runtime is installed by following the
          <link xlink:href="315e628d-551d-49f8-8aee-3e1721b11268">steps here.</link>
        </para>
        <para>
          If you receive a message saying the image is not correct, follow FIRSTs instruction for imaging the RoboRIO. Then you will have to reinstall the Runtime.
          Instructions for both of these can be found <link xlink:href="315e628d-551d-49f8-8aee-3e1721b11268">here.</link>
        </para>
        <para>
          If you receive a message saying it could not find all the needed files, make sure you are running the newest WPILib and newest Extension.
          Instructions for upgrading the extension can be found <link xlink:href="c85aadff-f6d3-48a2-8453-ac3eb71b06c5">here.</link> Instructions for
          upgrading WPILib can be found <link xlink:href="45c801c5-c35c-4939-a03e-9924749b0f32">here.</link>
        </para>
      </content>
    </section>

    <!-- Optional next steps info
    <nextSteps>
      <content><para>Next steps info goes here</para></content>
    </nextSteps>
    -->

    <relatedTopics>
      <externalLink>
        <linkText>RobotDotNet on GitHub</linkText>
        <linkAlternateText>Go to GitHub</linkAlternateText>
        <linkUri>https://GitHub.com/RobotDotNet</linkUri>
      </externalLink>
    </relatedTopics>
  </developerWalkthroughDocument>
</topic>
